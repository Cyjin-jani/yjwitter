[{"/Users/yeonjincho/Documents/twitterclone/src/index.js":"1","/Users/yeonjincho/Documents/twitterclone/src/components/App.js":"2","/Users/yeonjincho/Documents/twitterclone/src/components/Router.js":"3","/Users/yeonjincho/Documents/twitterclone/src/routes/Auth.js":"4","/Users/yeonjincho/Documents/twitterclone/src/routes/Home.js":"5","/Users/yeonjincho/Documents/twitterclone/src/fbase.js":"6","/Users/yeonjincho/Documents/twitterclone/src/components/Navigation.js":"7","/Users/yeonjincho/Documents/twitterclone/src/routes/Profile.js":"8","/Users/yeonjincho/Documents/twitterclone/src/components/Cweet.js":"9","/Users/yeonjincho/Documents/twitterclone/src/components/CweetFactory.js":"10","/Users/yeonjincho/Documents/twitterclone/src/components/AuthForm.js":"11"},{"size":334,"mtime":1608734085234,"results":"12","hashOfConfig":"13"},{"size":1278,"mtime":1608798713927,"results":"14","hashOfConfig":"13"},{"size":1591,"mtime":1608734071636,"results":"15","hashOfConfig":"13"},{"size":1445,"mtime":1608734215775,"results":"16","hashOfConfig":"13"},{"size":909,"mtime":1608734233650,"results":"17","hashOfConfig":"13"},{"size":697,"mtime":1608471978550,"results":"18","hashOfConfig":"13"},{"size":1461,"mtime":1608798670147,"results":"19","hashOfConfig":"13"},{"size":1734,"mtime":1608734335485,"results":"20","hashOfConfig":"13"},{"size":2563,"mtime":1608734461230,"results":"21","hashOfConfig":"13"},{"size":3368,"mtime":1608734494242,"results":"22","hashOfConfig":"13"},{"size":1902,"mtime":1608733266812,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1a17jl0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/yeonjincho/Documents/twitterclone/src/index.js",[],["50","51"],"/Users/yeonjincho/Documents/twitterclone/src/components/App.js",[],"/Users/yeonjincho/Documents/twitterclone/src/components/Router.js",[],"/Users/yeonjincho/Documents/twitterclone/src/routes/Auth.js",[],"/Users/yeonjincho/Documents/twitterclone/src/routes/Home.js",[],"/Users/yeonjincho/Documents/twitterclone/src/fbase.js",[],"/Users/yeonjincho/Documents/twitterclone/src/components/Navigation.js",[],"/Users/yeonjincho/Documents/twitterclone/src/routes/Profile.js",["52"],"import { authService, dbService } from 'fbase'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\n\nfunction Profile({ refreshUser, userObj }) {\n    const history = useHistory();\n    const [newDisplayName, setnewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n        \n    }\n\n    const onChange = (event) => {\n        const {target: {value},} = event;\n        setnewDisplayName(value);\n    }\n\n    const getMyCweets = async() => {\n        const cweets = await dbService.collection(\"cweets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"createdAt\").get();\n        console.log(cweets.docs.map(doc => doc.data()));\n    }\n\n    useEffect(() => {\n        getMyCweets();\n    }, []);\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    }\n\n    return (\n        <div className=\"container\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n            <input type=\"text\" placeholder=\"Display name\" onChange={onChange} value={newDisplayName} autoFocus className=\"formInput\" />\n            <input\n                type=\"submit\"\n                value=\"Update Profile\"\n                className=\"formBtn\"\n                style={{\n                    marginTop: 10,\n                }}\n            />\n        </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    )\n}\n\nexport default Profile","/Users/yeonjincho/Documents/twitterclone/src/components/Cweet.js",["53"],"import { dbService, storageService } from 'fbase';\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Cweet({ cweetObj, isOwner }) {\n    const [editing, setEditing] = useState(false);\n    const [newCweet, setNewCweet] = useState(cweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you Sure you want to Delete this cweet?\");\n        if(ok) {\n            //delete cweet\n            await dbService.doc(`cweets/${cweetObj.id}`).delete();\n            //delete photo\n            await storageService.refFromURL(cweetObj.attachmentUrl).delete();\n        }\n    }\n    const toggleEditing = () => setEditing(prev => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`cweets/${cweetObj.id}`).update({\n            text: newCweet\n        });\n        setEditing(false);\n    }\n    const onChange = (event) => {\n        const {target: {value}} = event;\n        setNewCweet(value);\n    }\n\n    return (\n        <div className=\"nweet\">\n            {\n                editing ? (\n                    <>\n                    {isOwner && <>\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                            <input type=\"text\" placeholder=\"edit cweet\" value={newCweet} required onChange={onChange} autoFocus className=\"formInput\" />\n                            <input type=\"submit\" value=\"Update Cweet\" className=\"formBtn\" />\n                        </form>\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                            Cancel\n                        </span>\n                        </>\n                    }\n                    </>\n                ) : (<>\n                    <h4>{cweetObj.text}</h4>\n                    {cweetObj.attachmentUrl && <img src={cweetObj.attachmentUrl} />}\n                    {isOwner && (\n                         <div class=\"nweet__actions\">\n                              <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                              </span>\n                              <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                              </span>   \n                        </div>\n                    )}\n                 </>)\n            }\n\n        </div>\n    )\n}\n\nexport default Cweet\n","/Users/yeonjincho/Documents/twitterclone/src/components/CweetFactory.js",["54"],"import React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport {v4 as uuidv4} from 'uuid';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction CweetFactory({ userObj }) {\n\n    const [cweet, setCweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (e) => {\n        if (cweet === \"\") {\n            return;\n        }\n        e.preventDefault();\n        let attachmentUrl = \"\";\n\n        if(attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const cweetObj = {\n            text: cweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        }\n\n        await dbService.collection(\"cweets\").add(cweetObj);\n        setCweet(\"\");\n        setAttachment(\"\");\n\n    }\n\n    const onChange = (event) => {\n        const { target: { value }} = event;\n        setCweet(value);\n    }\n\n    const onFileChange = (event) => {\n        const {target: {files}} = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: {result}} = finishedEvent;\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile);\n    }\n    const onClearAttachment = () => setAttachment(\"\");\n\n\n    return (\n        <div>\n            <form onSubmit={onSubmit} className=\"factoryForm\">\n                <div className=\"factoryInput__container\">\n                    <input\n                    className=\"factoryInput__input\"\n                    value={cweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                    />\n                    <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n                </div>\n                <label for=\"attach-file\" className=\"factoryInput__label\">\n                    <span>Add photos</span>\n                    <FontAwesomeIcon icon={faPlus} />\n                </label>\n\n                <input \n                    id=\"attach-file\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={onFileChange}\n                    style={{\n                        opacity: 0,\n                      }}\n                />\n               \n                { attachment && (\n                    <div className=\"factoryForm__attachment\">\n                        <img\n                            src={attachment}\n                            style={{\n                              backgroundImage: attachment,\n                            }}\n                        />\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                            <span>Remove</span>\n                            <FontAwesomeIcon icon={faTimes} />\n                        </div>\n                    </div>\n                )} \n            </form>\n        </div>\n    )\n}\n\nexport default CweetFactory\n","/Users/yeonjincho/Documents/twitterclone/src/components/AuthForm.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":26,"column":8,"nodeType":"61","endLine":26,"endColumn":10,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":49,"column":48,"nodeType":"65","endLine":49,"endColumn":84},{"ruleId":"63","severity":1,"message":"64","line":86,"column":25,"nodeType":"65","endLine":91,"endColumn":27},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyCweets'. Either include it or remove the dependency array.","ArrayExpression",["68"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [getMyCweets]",{"range":"71","text":"72"},[808,810],"[getMyCweets]"]