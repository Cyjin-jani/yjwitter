{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Cweet.js","components/CweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Cweet","cweetObj","isOwner","editing","setEditing","text","newCweet","setNewCweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","CweetFactory","userObj","cweet","setCweet","attachment","setAttachment","e","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","cweets","setCweets","useEffect","onSnapshot","snapshot","cweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setnewDisplayName","getMyCweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbf4f5af.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID\n  };\n\n  // Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance =firebase;\n\nexport const authService = firebase.auth();\n\nexport const dbService = firebase.firestore();\n\nexport const storageService = firebase.storage();","import { authService } from 'fbase';\nimport React, { useState } from 'react'\n\nfunction AuthForm() {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if(name === \"email\") {\n            setEmail(value)\n        } else if (name === \"password\") {\n            setPassword(value)\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if(newAccount) {\n                //create Account\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                //Log in\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n            console.log(data);\n        } catch(error) {\n            setError(error.message);\n        }\n    }\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input className=\"authInput\" name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange}/>\n                <input className=\"authInput\" name=\"password\" type=\"password\" placeholder=\"password\" required value={password} onChange={onChange} />\n                <input className=\"authInput authSubmit\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Sign In\"} />\n                <br/>\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    )\n}\n\nexport default AuthForm\n","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from 'fbase';\nimport AuthForm from 'components/AuthForm';\n\n\nfunction Auth() {\n    \n    const onSocialClick = async (event) => {\n        const { target: {name}} = event;\n        let provider;\n        if(name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n        \n    }\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>   \n            </div>\n        </div>\n    )\n}\n\nexport default Auth\n","import { dbService, storageService } from 'fbase';\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Cweet({ cweetObj, isOwner }) {\n    const [editing, setEditing] = useState(false);\n    const [newCweet, setNewCweet] = useState(cweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you Sure you want to Delete this cweet?\");\n        if(ok) {\n            //delete cweet\n            await dbService.doc(`cweets/${cweetObj.id}`).delete();\n            //delete photo\n            await storageService.refFromURL(cweetObj.attachmentUrl).delete();\n        }\n    }\n    const toggleEditing = () => setEditing(prev => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`cweets/${cweetObj.id}`).update({\n            text: newCweet\n        });\n        setEditing(false);\n    }\n    const onChange = (event) => {\n        const {target: {value}} = event;\n        setNewCweet(value);\n    }\n\n    return (\n        <div className=\"nweet\">\n            {\n                editing ? (\n                    <>\n                    {isOwner && <>\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                            <input type=\"text\" placeholder=\"edit cweet\" value={newCweet} required onChange={onChange} autoFocus className=\"formInput\" />\n                            <input type=\"submit\" value=\"Update Cweet\" className=\"formBtn\" />\n                        </form>\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                            Cancel\n                        </span>\n                        </>\n                    }\n                    </>\n                ) : (<>\n                    <h4>{cweetObj.text}</h4>\n                    {cweetObj.attachmentUrl && <img src={cweetObj.attachmentUrl} />}\n                    {isOwner && (\n                         <div class=\"nweet__actions\">\n                              <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                              </span>\n                              <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                              </span>   \n                        </div>\n                    )}\n                 </>)\n            }\n\n        </div>\n    )\n}\n\nexport default Cweet\n","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport {v4 as uuidv4} from 'uuid';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction CweetFactory({ userObj }) {\n\n    const [cweet, setCweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (e) => {\n        if (cweet === \"\") {\n            return;\n        }\n        e.preventDefault();\n        let attachmentUrl = \"\";\n\n        if(attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const cweetObj = {\n            text: cweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        }\n\n        await dbService.collection(\"cweets\").add(cweetObj);\n        setCweet(\"\");\n        setAttachment(\"\");\n\n    }\n\n    const onChange = (event) => {\n        const { target: { value }} = event;\n        setCweet(value);\n    }\n\n    const onFileChange = (event) => {\n        const {target: {files}} = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: {result}} = finishedEvent;\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile);\n    }\n    const onClearAttachment = () => setAttachment(\"\");\n\n\n    return (\n        <div>\n            <form onSubmit={onSubmit} className=\"factoryForm\">\n                <div className=\"factoryInput__container\">\n                    <input\n                    className=\"factoryInput__input\"\n                    value={cweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                    />\n                    <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n                </div>\n                <label for=\"attach-file\" className=\"factoryInput__label\">\n                    <span>Add photos</span>\n                    <FontAwesomeIcon icon={faPlus} />\n                </label>\n\n                <input \n                    id=\"attach-file\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={onFileChange}\n                    style={{\n                        opacity: 0,\n                      }}\n                />\n               \n                { attachment && (\n                    <div className=\"factoryForm__attachment\">\n                        <img\n                            src={attachment}\n                            style={{\n                              backgroundImage: attachment,\n                            }}\n                        />\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                            <span>Remove</span>\n                            <FontAwesomeIcon icon={faTimes} />\n                        </div>\n                    </div>\n                )} \n            </form>\n        </div>\n    )\n}\n\nexport default CweetFactory\n","import { dbService } from 'fbase';\nimport React, { useEffect, useState } from 'react';\nimport Cweet from '../components/Cweet';\nimport CweetFactory from 'components/CweetFactory';\n\nfunction Home({ userObj }) {\n    const [cweets, setCweets] = useState([]);\n        \n    useEffect(() => {\n        \n        dbService.collection(\"cweets\").onSnapshot(snapshot => {\n            const cweetArray = snapshot.docs.map(doc => ({\n                id: doc.id, ...doc.data(),\n            }));\n            setCweets(cweetArray);\n        })\n    }, []);\n    \n    return (\n        <div className=\"container\">\n            <CweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n                {cweets.map(cweet => (\n                    <Cweet key={cweet.id} cweetObj={cweet} isOwner={cweet.creatorId === userObj.uid} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Navigation({ userObj }) {\n    return (\n        <nav>\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n                <li>\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n                    </Link>\n                </li>\n                <li>\n                    <Link\n                        to=\"/profile\"\n                        style={{\n                        marginLeft: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                        }}\n                    >\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                        <span style={{ marginTop: 10 }}>\n                        {userObj.displayName\n                            ? `${userObj.displayName}의 Profile`\n                            : \"Profile\"}\n                        </span>\n                    </Link>\n                </li>\n            </ul>\n       </nav>       \n    )\n}\n\nexport default Navigation\n","import { authService, dbService } from 'fbase'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\n\nfunction Profile({ refreshUser, userObj }) {\n    const history = useHistory();\n    const [newDisplayName, setnewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n        \n    }\n\n    const onChange = (event) => {\n        const {target: {value},} = event;\n        setnewDisplayName(value);\n    }\n\n    const getMyCweets = async() => {\n        const cweets = await dbService.collection(\"cweets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"createdAt\").get();\n        console.log(cweets.docs.map(doc => doc.data()));\n    }\n\n    useEffect(() => {\n        getMyCweets();\n    }, []);\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    }\n\n    return (\n        <div className=\"container\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n            <input type=\"text\" placeholder=\"Display name\" onChange={onChange} value={newDisplayName} autoFocus className=\"formInput\" />\n            <input\n                type=\"submit\"\n                value=\"Update Profile\"\n                className=\"formBtn\"\n                style={{\n                    marginTop: 10,\n                }}\n            />\n        </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    )\n}\n\nexport default Profile","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Navigation from 'components/Navigation';\nimport Profile from 'routes/Profile';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            { isLoggedIn && <Navigation userObj={userObj} /> }\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                        maxWidth: 890,\n                        width: \"100%\",\n                        margin: \"0 auto\",\n                        marginTop: 80,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        }}\n                    >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\n                        </Route>\n                        {/* <Redirect from=\"*\" to=\"/\" /> */}\n                    </div>\n                    ) : (\n                        <>\n                            <Route exact path=\"/\">\n                                <Auth />\n                            </Route>\n                            {/* <Redirect from=\"*\" to=\"/\" /> */}\n                        </>\n                        )}\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService} from 'fbase';\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn ] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setIsLoggedIn(true);\n        // setUserObj(user); option2\n        //option1\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    })\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    // option 2\n    // setUserObj(Object.assign({}, user));\n    // option 1\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    })\n  }\n\n  return (\n    <>\n    {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj} /> : 'initializing...'}\n    {/* <footer>&copy; Chowitter {new Date().getFullYear()}</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n// import fbase from './fbase';\n\n//check if firebase connected with this pj\n// console.log(firebase);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}